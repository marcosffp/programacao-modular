<diagram program="umletino" version="15.1"><zoom_level>13</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>1534</x><y>234</y><w>637</w><h>455</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::Pessoa
--
-nome: String
-dataNascimento: LocalDate 
-genero: Genero
-altura: float
-peso: int
-renda: float                             
-naturalidade: String                   
-hobby: Hobby                           
-estadoCivil: EstadoCivil                
-escolaridade: Escolaridade            
-feliz: boolean                         
-moradia: Moradia 
__-dataFormatador: DateTimeFormatter__
--
+isStringValido(nome: String): boolean
-isDataNascimentoAntesHoje(dataNascimento: LocalDate): boolean
-isAlturaDentroDosLimites(altura: float): boolean
-isPesoDentroDosLimites(peso: int): boolean
-isRendaPositiva(renda: float): boolean
+toString(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2444</x><y>208</y><w>273</w><h>156</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Escolaridade
--
 NENHUMA
 FUNDAMENTAL
 MEDIO
 SUPERIOR
 POS_GRADUACAO</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2444</x><y>26</y><w>273</w><h>156</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::EstadoCivil
--
 SOLTEIRO
 CASADO
 VIUVO
 SEPARADO
 DIVORCIADO</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2444</x><y>546</y><w>273</w><h>221</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Hobby
--
 ARTE
 ESPORTE
 CINEMA
 LIVRO
 MÚSICA
 CULINÁRIA
 GAME
 NENHUM</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2444</x><y>793</y><w>273</w><h>117</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Moradia
--
 COM_FAMILIA
 ALUGUEL
 CASA_PROPRIA</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>0</y><w>1131</w><h>1092</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::Dataset
--
_-MAX_PESSOAS = 100: int_
_-pessoas: Pessoas[MAX_PESSOAS]_
-quantidadePessoas: int
-medidaDistancia: DistanceMeasure
--
+addPessoa(pessoa: Pessoa): void
-removerPessoaPorIndice(indice :int): void
+removePessoa(pessoa: Pessoa): void
+removePessoaByName(nome: String): void
+replacePessoa(pessoaAntiga: Pessoa, pessoaNova: Pessoa): void
+getPessoaByName(nome: String): Pessoa
+getAll(): Pessoa[]
+removeAll(): void
+size(): int
+maxAltura(): float
+minAltura(): float
+maxRenda(): float
+minRenda(): float
-calcularValorMaximoFloat(pessoas: Pessoas[], tipo: String): float
-calcularValorMinimoFloat(pessoas: Pessoas[], tipo: String): float
-obterValorPorTipoFloat(pessoa: Pessoas, tipo: String): float
+avgAltura(): float
+maxPeso(): int
+maxIdade(): int
+minIdade(): int
+minPeso(): int
+avgPeso(): float
-calcularValorMaximoInt(pessoas: Pessoas[], tipo: String): int
-calcularValorMinimoInt(pessoas: Pessoa[], tipo: String): int
-obterValorPorTipoInt(pessoa: Pessoa, tipo: String): int
-calcularIdade(pessoa: Pessoa): int
calcularPorcentagem(quantidade: int): float
+percentAdult(): float
+percentEstadoCivil(estado: EstadoCivil): float
+modeEstadoCivil(): EstadoCivil
+percentEscolaridade(escolaridade: Escolaridade): float
+modeEscolaridade(): Escolaridade
+percentMoradia(moradia: Moradia): float
+percentHobby(): float
+percentFeliz(): float
+modeMoradia(): Moradia
+calcDistanceVector(pessoa: Pessoa): float[]
+calcDistanceMatriz(): float[][]
+getSimilar(pessoa: Pessoa, n: int): Pessoa[]
-inicializarMenoresDistancias(quantidadePessoasSemelhante): float[]
-encontrarPessoasSemelhantes(distanciasAlvo: float[], menoresDistancias: float[], pessoasSemelhantes: Pessoa[], n: int, pessoa: Pessoa): void
-atualizarPessoasSemelhantes(distanciaAtual: float, indice: int, menoresDistancias: float[], pessoasSemelhantes: Pessoa[], n: int): void
+obterPosicaoPessoa(pessoa: Pessoa): int
+normalizeField(fieldName: String): float[]
-aplicarNormalizacao(valoresNormalizados: float[], nomeCampo: String): void
-calcularNormalizacaoFloat(valoesNormalizados: float[], minimo: float, maximo: float, nomeCampo: String): void
-calcularNormalizacaoInt(valoesNormalizados: float[], minimo: int, maximo: int, nomeCampo: String): void
+toString(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>39</x><y>1235</y><w>1092</w><h>195</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::DistanceMeasure
--
-dataset: Dataset
__-QUANTIDADE_ATRIBUTO=10: int__
--
+calcDistance(first: Pessoa, second: Pessoa): float
-calcularDistanciaAtributosCategorizados(first: Pessoa, second: Pessoa): int[]
-calcularDistanciaAtributosNumericos(first: Pessoa, second: Pessoa, nomeCampo: String): float
-calcularSomaQuadrados(distanciasAtributosCategorizados: int[], distanciasAtributosNumericos: float[]): float

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2158</x><y>273</y><w>312</w><h>78</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
tem</panel_attributes><additional_attributes>220;30;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2444</x><y>377</y><w>273</w><h>143</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Genero
--
 FEMININO
 MASCULINO
 NAO_BINARIO
 NAO_RESPONDER</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2158</x><y>403</y><w>312</w><h>78</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
tem</panel_attributes><additional_attributes>220;30;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>2158</x><y>559</y><w>312</w><h>104</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
tem</panel_attributes><additional_attributes>220;60;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>2158</x><y>663</y><w>312</w><h>195</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
tem</panel_attributes><additional_attributes>220;130;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>2158</x><y>65</y><w>312</w><h>208</h></coordinates><panel_attributes>lt=&lt;-
m1=1
m2=1
tem</panel_attributes><additional_attributes>220;10;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>1118</x><y>390</y><w>442</w><h>65</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=*
m2=0..1
possui</panel_attributes><additional_attributes>320;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>546</x><y>1079</y><w>91</w><h>182</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..1
m2=0..1
agrega</panel_attributes><additional_attributes>10;120;10;10</additional_attributes></element></diagram>