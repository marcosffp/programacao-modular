<diagram program="umletino" version="15.1"><zoom_level>2</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>586</x><y>484</y><w>98</w><h>70</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::Pessoa
--
-nome: String
-dataNascimento: LocalDate 
-altura: float
-peso: int
-renda: float                             
-naturalidade: String                   
-hobby: Hobby                                     
-feliz: boolean                         
__-dataFormatador: DateTimeFormatter__
--
+isStringValido(nome: String): boolean
-isDataNascimentoAntesHoje(dataNascimento: LocalDate): boolean
-isAlturaDentroDosLimites(altura: float): boolean
-isPesoDentroDosLimites(peso: int): boolean
-isRendaPositiva(renda: float): boolean
+toString(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>726</x><y>480</y><w>42</w><h>24</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Escolaridade
--
 NENHUMA
 FUNDAMENTAL
 MEDIO
 SUPERIOR
 POS_GRADUACAO</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>726</x><y>452</y><w>42</w><h>24</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::EstadoCivil
--
 SOLTEIRO
 CASADO
 VIUVO
 SEPARADO
 DIVORCIADO</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>726</x><y>532</y><w>42</w><h>34</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Hobby
--
 ARTE
 ESPORTE
 CINEMA
 LIVRO
 MÚSICA
 CULINÁRIA
 GAME
 NENHUM</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>726</x><y>570</y><w>42</w><h>18</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Moradia
--
 COM_FAMILIA
 ALUGUEL
 CASA_PROPRIA</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>350</x><y>448</y><w>174</w><h>180</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::Dataset
--
_-MAX_PESSOAS = 100_
_-NOT_FUND=-1_
-quantidadePessoas: int
--
+addPessoa(pessoa: Pessoa): void
-removerPessoaPorIndice(indice :int): void
+removePessoa(pessoa: Pessoa): void
+removePessoaByName(nome: String): void
+replacePessoa(pessoaAntiga: Pessoa, pessoaNova: Pessoa): void
+getPessoaByName(nome: String): Pessoa
+getAll(): Pessoa[]
+removeAll(): void
+size(): int
+maxAltura(): float
+minAltura(): float
+maxRenda(): float
+minRenda(): float
+avgRenda(): float
-calcularValorMaximoFloat(pessoas: Pessoas[], tipo: String): float
-calcularValorMinimoFloat(pessoas: Pessoas[], tipo: String): float
-obterValorPorTipoFloat(pessoa: Pessoas, tipo: String): float
+avgAltura(): float
+maxPeso(): int
+maxIdade(): int
+minIdade(): int
+minPeso(): int
+avgPeso(): float
-calcularValorMaximoInt(pessoas: Pessoas[], tipo: String): int
-calcularValorMinimoInt(pessoas: Pessoa[], tipo: String): int
-obterValorPorTipoInt(pessoa: Pessoa, tipo: String): int
-calcularIdade(pessoa: Pessoa): int
calcularPorcentagem(quantidade: int): float
+percentAdult(): float
+percentEstadoCivil(estado: EstadoCivil): float
+modeEstadoCivil(): EstadoCivil
+percentEscolaridade(escolaridade: Escolaridade): float
+percentGenero(genero: Genero): float
+modeEscolaridade(): Escolaridade
+percentMoradia(moradia: Moradia): float
+percentHobby(): float
+percentFeliz(): float
+modeMoradia(): Moradia
+calcDistanceVector(pessoa: Pessoa): float[]
+calcDistanceMatriz(): float[][]
+getSimilar(pessoa: Pessoa, n: int): Pessoa[]
-inicializarMenoresDistancias(quantidadePessoasSemelhante): float[]
-encontrarPessoasSemelhantes(distanciasAlvo: float[], menoresDistancias: float[], pessoasSemelhantes: Pessoa[], n: int, pessoa: Pessoa): void
-atualizarPessoasSemelhantes(distanciaAtual: float, indice: int, menoresDistancias: float[], pessoasSemelhantes: Pessoa[], n: int): void
+obterPosicaoPessoa(pessoa: Pessoa): int
+normalizeField(fieldName: String): float[]
-aplicarNormalizacao(valoresNormalizados: float[], nomeCampo: String): void
-calcularNormalizacaoFloat(nomeCampo: String, valoesNormalizados: float[], minimo: float, maximo: float): void
-calcularNormalizacaoInt(nomeCampo: String, valoesNormalizados: float[], minimo: int, maximo: int): void
+loadDataFromCSV(filename: String): void
-
+toString(): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>356</x><y>658</y><w>168</w><h>30</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::DistanceMeasure
--
-dataset: Dataset
__-QUANTIDADE_ATRIBUTO=10: int__
--
+calcDistance(first: Pessoa, second: Pessoa): float
-calcularDistanciaAtributosCategorizados(first: Pessoa, second: Pessoa): int[]
-calcularDistanciaAtributosNumericos(first: Pessoa, second: Pessoa, nomeCampo: String): float
-calcularSomaQuadrados(distanciasAtributosCategorizados: int[], distanciasAtributosNumericos: float[]): float

</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>682</x><y>490</y><w>48</w><h>18</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;70;220;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>726</x><y>506</y><w>42</w><h>22</h></coordinates><panel_attributes>&lt;&lt;enum&gt;&gt;
br.lpm.business::Genero
--
 FEMININO
 MASCULINO
 NAO_BINARIO
 NAO_RESPONDER</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>682</x><y>516</y><w>48</w><h>12</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;30;220;10</additional_attributes></element><element><id>Relation</id><coordinates><x>682</x><y>532</y><w>48</w><h>14</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;40;220;10</additional_attributes></element><element><id>Relation</id><coordinates><x>682</x><y>550</y><w>48</w><h>32</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;10;220;140</additional_attributes></element><element><id>Relation</id><coordinates><x>682</x><y>464</y><w>48</w><h>28</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;120;220;10</additional_attributes></element><element><id>Relation</id><coordinates><x>522</x><y>500</y><w>68</w><h>10</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1..*
m2=0..1
</panel_attributes><additional_attributes>10;20;320;20</additional_attributes></element><element><id>Relation</id><coordinates><x>446</x><y>626</y><w>8</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>348</x><y>404</y><w>172</w><h>24</h></coordinates><panel_attributes>&lt;&lt;class&gt;&gt;
br.lpm.business::Knn
--
-k: int
--
+classifyFeliz(pessoa: Pessoa): boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>434</x><y>426</y><w>8</w><h>26</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element></diagram>